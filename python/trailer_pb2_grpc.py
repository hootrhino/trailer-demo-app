# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import trailer_pb2 as trailer__pb2


class trailerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/trailer.trailer/Init',
                request_serializer=trailer__pb2.Config.SerializeToString,
                response_deserializer=trailer__pb2.Response.FromString,
                )
        self.Start = channel.unary_unary(
                '/trailer.trailer/Start',
                request_serializer=trailer__pb2.Request.SerializeToString,
                response_deserializer=trailer__pb2.Response.FromString,
                )
        self.Status = channel.unary_unary(
                '/trailer.trailer/Status',
                request_serializer=trailer__pb2.Request.SerializeToString,
                response_deserializer=trailer__pb2.StatusResponse.FromString,
                )
        self.Service = channel.unary_unary(
                '/trailer.trailer/Service',
                request_serializer=trailer__pb2.ServiceRequest.SerializeToString,
                response_deserializer=trailer__pb2.ServiceResponse.FromString,
                )
        self.Query = channel.unary_unary(
                '/trailer.trailer/Query',
                request_serializer=trailer__pb2.DataRowsRequest.SerializeToString,
                response_deserializer=trailer__pb2.DataRowsResponse.FromString,
                )
        self.Schema = channel.unary_unary(
                '/trailer.trailer/Schema',
                request_serializer=trailer__pb2.SchemaRequest.SerializeToString,
                response_deserializer=trailer__pb2.SchemaResponse.FromString,
                )
        self.Stop = channel.unary_unary(
                '/trailer.trailer/Stop',
                request_serializer=trailer__pb2.Request.SerializeToString,
                response_deserializer=trailer__pb2.Response.FromString,
                )


class trailerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """初始化, 主要是为了传配置进去
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """启动
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Status(self, request, context):
        """获取状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Service(self, request, context):
        """服务调用
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Query(self, request, context):
        """数据查询
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Schema(self, request, context):
        """数据模型
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """停止
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_trailerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=trailer__pb2.Config.FromString,
                    response_serializer=trailer__pb2.Response.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=trailer__pb2.Request.FromString,
                    response_serializer=trailer__pb2.Response.SerializeToString,
            ),
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=trailer__pb2.Request.FromString,
                    response_serializer=trailer__pb2.StatusResponse.SerializeToString,
            ),
            'Service': grpc.unary_unary_rpc_method_handler(
                    servicer.Service,
                    request_deserializer=trailer__pb2.ServiceRequest.FromString,
                    response_serializer=trailer__pb2.ServiceResponse.SerializeToString,
            ),
            'Query': grpc.unary_unary_rpc_method_handler(
                    servicer.Query,
                    request_deserializer=trailer__pb2.DataRowsRequest.FromString,
                    response_serializer=trailer__pb2.DataRowsResponse.SerializeToString,
            ),
            'Schema': grpc.unary_unary_rpc_method_handler(
                    servicer.Schema,
                    request_deserializer=trailer__pb2.SchemaRequest.FromString,
                    response_serializer=trailer__pb2.SchemaResponse.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=trailer__pb2.Request.FromString,
                    response_serializer=trailer__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'trailer.trailer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class trailer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trailer.trailer/Init',
            trailer__pb2.Config.SerializeToString,
            trailer__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trailer.trailer/Start',
            trailer__pb2.Request.SerializeToString,
            trailer__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trailer.trailer/Status',
            trailer__pb2.Request.SerializeToString,
            trailer__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Service(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trailer.trailer/Service',
            trailer__pb2.ServiceRequest.SerializeToString,
            trailer__pb2.ServiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trailer.trailer/Query',
            trailer__pb2.DataRowsRequest.SerializeToString,
            trailer__pb2.DataRowsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Schema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trailer.trailer/Schema',
            trailer__pb2.SchemaRequest.SerializeToString,
            trailer__pb2.SchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trailer.trailer/Stop',
            trailer__pb2.Request.SerializeToString,
            trailer__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
